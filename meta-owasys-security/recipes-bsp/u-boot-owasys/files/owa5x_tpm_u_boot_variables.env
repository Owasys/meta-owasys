bootdelay=0
baudrate=115200
ethprime=eth0
loadaddr=0x82000000
mfgtool_args=setenv bootargs console=${console},${baudrate} rdinit=/linuxrc clk_ignore_unused 
kboot=booti 
bootcmd_mfg=run mfgtool_args;if iminfo ${initrd_addr}; then if test ${tee} = yes; then bootm ${tee_addr} ${initrd_addr} ${fdt_addr}; else booti ${loadaddr} ${initrd_addr} ${fdt_addr}; fi; else echo "Run fastboot ..."; fastboot 0; fi;
nandfit_part=yes
initrd_addr=0x43800000
initrd_high=0xffffffffffffffff
emmc_dev=2
sd_dev=1
devicetreefile=devicetree.dtb
boot_owa5x=echo Look for boot scripts;if fatload mmc 1 0x82000000 owa5x-boot.script; then echo MMC boot script found; source 0x82000000; run update_owa5x; else usb reset; if fatload usb 0:1 0x82000000 owa5x-boot.script; then usb stop; echo USB boot script found; source 0x82000000; run update_owa5x; else if test -n "${owa5X_rauc_script}"; then run owa5X_rauc_script; else echo Boot scripts not found; usb stop; run update_owa5x; fi; fi; fi; run nandboot;
bootcmd=run set_ph_policy; run boot_owa5x
update_owa5x=if test ${updatefw} != 1; then echo Nothing to update; else echo Running update!!; run update_boot; run update_fs; run update_fsback; setenv updatefw; setenv loadsize;saveenv; reset; fi;
update_boot=if ext4load mmc 2 0x82000200 /home/Update/flash.bin; then echo u-boot file found; setenv loadsize ${filesize};if ext4load mmc 2 0x82000000 /home/Update/flash.bin.md5; then echo u-boot md5 file found; md5sum 82000200 ${loadsize} *82000100; if cmp 0x82000000 0x82000100 0x4; then nand erase.part NAND.u-boot; nand write 0x82000200 NAND.u-boot ${loadsize}; nandbcb init 0x82000200 NAND.u-boot ${loadsize};echo u-boot updated OK;  else echo u-boot md5sum ERROR; fi;else echo u-boot md5 file not found; fi; else echo u-boot file not found; fi;
update_fs=if ext4load mmc 2 0x82000200 /home/Update/fs; then echo FS file found; setenv loadsize ${filesize};if ext4load mmc 2 0x82000000 /home/Update/fs.md5; then echo FS md5 file found; md5sum 82000200 ${loadsize} *82000100; if cmp 0x82000000 0x82000100 0x4; then nand erase.part NAND.file-systemA; nand write 0x82000200 NAND.file-systemA ${loadsize};  else echo FS md5sum ERROR; fi;else echo FS md5 file not found; fi; else echo FS file not found; fi;
update_fsback=if ext4load mmc 2 0x82000200 /home/Update/fsback; then echo FS backup file found; setenv loadsize ${filesize};if ext4load mmc 2 0x82000000 /home/Update/fsback.md5; then echo FS backup md5 file found; md5sum 82000200 ${loadsize} *82000100; if cmp 0x82000000 0x82000100 0x4; then nand erase.part NAND.file-systemB; nand write 0x82000200 NAND.file-systemB ${loadsize};  else echo FS backup md5sum ERROR; fi;else echo FS backup md5 file not found; fi; else echo FS backup file not found; fi;
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then if run loadbootscript; then run bootscript; else if run loadimage; then run startmmcboot; else run netboot; fi; fi; fi;
bootscript=echo Running bootscript from mmc ...; source
splashimage=0x50000000
fdt_addr=0x88000000
fdt_high=0xffffffffffffffff
fdt_file=imx8mp-owa5x.dtb
upgrade_available=1
boot_fit=no
mtdids=nand0=nand.0
mtdparts=nand.0:8m(NAND.u-boot),8m(NAND.u-boot-bckp),1m(NAND.u-boot-env),1m(NAND.u-boot-env.backup),503m(NAND.file-systemA),-(NAND.file-systemB)
console=ttymxc0,115200 earlycon=ec_imx6q,0x30860000,115200
mmcdev=2
mmcpart=1
mmcroot=/dev/mmcblk1p2 rootwait quiet rw mtdparts
mmcautodetect=yes
mmcargs=setenv bootargs ${jh_clk} console=${console} root=${mmcroot}
startmmcboot=echo Booting from mmc ...; run mmcargs; if test ${boot_fit} = yes || test ${boot_fit} = try; then bootm ${loadaddr}; else if run loadfdt; then booti ${loadaddr} - ${fdt_addr}; else echo WARN: Cannot load the DT; fi; fi;
mmcsecureboot=echo Trying to boot securely from mmc ...; if hab_auth_img ${fileaddr} ${filesize} 0x01bc7000; then echo Secure image found!Booting ...; run mmcargs; if test ${boot_fit} = yes || test ${boot_fit} = try; then bootm ${loadaddr}; else if run loadfdt; then booti ${loadaddr} - ${fdt_addr}; else echo WARN: Cannot load the DT; fi; fi;else echo Kernel Image is not trusted, reseting device...; reset; fi;
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-systemA,4096
nandrootfstype=ubifs rootwait=1 quiet ubi.fm_autoconvert=1
nandboot=echo Booting from nand ...; run nandargs; run nand_mount_fs; ubifsmount ubi0; ubifsload ${fdt_addr} /boot/${devicetreefile}; ubifsload ${loadaddr} /boot/Image; booti ${loadaddr} - ${fdt_addr}
nand_mount_fs=ubi part NAND.file-systemA
loadbootscript=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};
loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}
loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}
image=Image
netargs=setenv bootargs ${jh_clk} console=${console} root=/dev/nfs ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp
netboot=echo Booting from net ...; run netargs;  if test ${ip_dyn} = yes; then setenv get_cmd dhcp; else setenv get_cmd tftp; fi; ${get_cmd} ${loadaddr} ${image}; if test ${boot_fit} = yes || test ${boot_fit} = try; then bootm ${loadaddr}; else if ${get_cmd} ${fdt_addr} ${fdt_file}; then booti ${loadaddr} - ${fdt_addr}; else echo WARN: Cannot load the DT; fi; fi;
set_ph_policy=tpm2 init; tpm2 startup TPM2_SU_CLEAR; tpm2 change_auth TPM2_RH_PLATFORM owasys;
